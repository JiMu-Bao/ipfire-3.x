###############################################################################
# IPFire.org    - An Open Source Firewall Solution                            #
# Copyright (C) - IPFire Development Team <info@ipfire.org>                   #
###############################################################################

name       = wpa_supplicant
version    = 2.9
release    = 1

groups     = Sytem/Base
url        = https://w1.fi/wpa_supplicant/
license    = BSD
summary    = WPA/WPA2/IEEE 802.1X Supplicant

description
	wpa_supplicant is a WPA Supplicant for Linux, BSD and Windows with support
	for WPA and WPA2 (IEEE 802.11i / RSN). Supplicant is the IEEE 802.1X/WPA
	component that is used in the client stations. It implements key negotiation
	with a WPA Authenticator and it controls the roaming and IEEE 802.11
	authentication/association of the wlan driver.
end

source_dl  = https://w1.fi/releases/

build
	requires
		dbus-devel
		libnl3-devel
		ncurses-devel
		openssl-devel
		pkg-config
		readline-devel
	end

	prepare_cmds
		cp -v %{DIR_APP}/wpa_supplicant/{defconfig,.config}

		sed -i %{DIR_APP}/wpa_supplicant/.config \
			-e "s/#CONFIG_READLINE=y/CONFIG_READLINE=y/" \
			-e "s/#CONFIG_LIBNL32=y/CONFIG_LIBNL32=y/"

		(
			# Enable 802.11s mesh networking
			echo "CONFIG_MESH=y"
			echo "CONFIG_SAE=y"

			echo "CONFIG_IEEE80211W=y"
		) >> %{DIR_APP}/wpa_supplicant/.config
	end

	build
		# Build wpa_supplicant
		cd %{DIR_APP}/wpa_supplicant && make %{PARALLELISMFLAGS}
	end

	install
		mkdir -pv %{BUILDROOT}/etc/wpa_supplicant
		mkdir -pv %{BUILDROOT}/usr/sbin

		# Install config file
		install -D -m 0600 %{DIR_SOURCE}/wpa_supplicant.conf %{BUILDROOT}/etc/wpa_supplicant

		# Install binaries
		install -m 0755 %{DIR_APP}/wpa_supplicant/wpa_passphrase %{BUILDROOT}/usr/sbin
		install -m 0755 %{DIR_APP}/wpa_supplicant/wpa_cli %{BUILDROOT}/usr/sbin
		install -m 0755 %{DIR_APP}/wpa_supplicant/wpa_supplicant %{BUILDROOT}/usr/sbin
	end
end

packages
	package %{name}
		requires += network >= 1:005

		script postin
			/usr/bin/systemctl daemon-reload >/dev/null 2>&1 || :
		end

		script postun
			/usr/bin/systemctl daemon-reload >/dev/null 2>&1 || :
		end

		script postup
			/usr/bin/systemctl daemon-reload >/dev/null 2>&1 || :
		end
	end

	package %{name}-debuginfo
		template DEBUGINFO
	end
end
